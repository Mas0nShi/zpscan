name: Release
on:
  create:
    tags:
      - v*
  workflow_dispatch:

jobs:
  release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - centos-latest
          - macos-latest
    steps:
      - name: Set up Go 1.18
        uses: actions/setup-go@v1
        with:
          go-version: 1.18
        id: go

      - name: Set up libpcap-dev
        if: matrix.os == 'centos-latest'
        run: |
          wget -O /etc/yum.repos.d/CentOS-Base.repo https://mirrors.aliyun.com/repo/Centos-vault-8.5.2111.repo
          yum clean all
          yum makecache
          dnf config-manager --add-repo /etc/yum.repos.d/CentOS-PowerTools.repo
          dnf config-manager --set-enabled PowerTools
          dnf install epel-release -y
          dnf install libpcap-devel -y

      - name: Get version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Get dependencies
        run: go mod download

      - name: Build On Linux
        run: |
          go build -ldflags "-s -w" -o ./zpscan_linux main.go
          chmod +x zpscan_linux
        if: matrix.os == 'centos-latest'
        env:
          GOENABLE: 1
      - name: Build On Darwin
        run: |
          go build -ldflags "-s -w" -o ./zpscan_darwin main.go
          chmod +x zpscan_darwin
        if: matrix.os == 'macos-latest'
      - name: Build On Windows
        run: |
          go build -ldflags "-s -w" -o ./zpscan_windows.exe main.go
        if: matrix.os == 'centos-latest'
        env:
          GOOS: windows
          GOENABLE: 1
      - name: Release
        uses: softprops/action-gh-release@master
        with:
          files: zpscan_*
          fail_on_unmatched_files: true
          token: ${{ secrets.GITHUB_TOKEN }}
          append_body: true